########## Config SpringBoot ##########
server.servlet.contextPath=${SERVER_SERVLET_CONTEXTPATH}
springdoc.config=${SPRINGDOC_CONFIG}
springdoc.info.title=${SPRINGDOC_INFO_TITLE}
springdoc.info.description=${SPRINGDOC_INFO_DESCRIPTION}
springdoc.info.version=${SPRINGDOC_INFO_VERSION}
springdoc.info.nameContact=${SPRINGDOC_INFO_NAMECONTACT}
springdoc.info.mailContact=${SPRINGDOC_INFO_MAILCONTACT}
springdoc.info.urlContact=${SPRINGDOC_INFO_URLCONTACT}
springdoc.info.urlConfluence=${SPRINGDOC_INFO_URLCONFLUENCE}
springdoc.enabledGlobalHeaders=${SPRINGDOC_ENABLEDGLOBALHEADERS}
springdoc.enabledServerHttps=${SPRINGDOC_ENABLEDSERVERHTTPS}
springdoc.swagger-ui.enabled=${SPRINGDOC_SWAGGER-UI_ENABLED}


########## Config Actuator ##########
management.endpoints.web.base-path=${MANAGEMENT_ENDPOINTS_WEB_BASE-PATH}
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS}
management.health.circuitbreakers.enabled=${MANAGEMENT_HEALTH_CIRCUITBREAKERS_ENABLED}
management.health.ratelimiters.enabled=${MANAGEMENT_HEALTH_RATELIMITERS_ENABLED}
management.health.elasticsearch.enabled=${MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED}
management.info.env.enabled=${MANAGEMENT_INFO_ENV_ENABLED}
management.endpoint.prometheus.enabled=${MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED}
management.metrics.export.prometheus.enabled=${MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED}


########## Timeout Database for table ##########
channel.credentials.dao.timeout=${CHANNEL_CREDENTIALS_DAO_TIMEOUT}


########## Datasource CCARD Settings ##########
spring.ccard.datasource.initialize=${SPRING_CCARD_DATASOURCE_INITIALIZE}
spring.ccard.datasource.driver-class-name=${DBCP_CCARD_SPTOKENAUTHENTICATIONSERVICE_DRIVER}
spring.ccard.datasource.jdbc-url=${DBCP_CCARD_SPTOKENAUTHENTICATIONSERVICE_URL}
spring.ccard.datasource.username=${DBCP_CCARD_SPTOKENAUTHENTICATIONSERVICE_USERNAME}
spring.ccard.datasource.password=${DBCP_CCARD_SPTOKENAUTHENTICATIONSERVICE_PASSWORD}
spring.ccard.datasource.type=${SPRING_CCARD_DATASOURCE_TYPE}


########## HikariCP CCARD Settings ##########
spring.ccard.datasource.connection-timeout=${DBCP_GENERIC_CONN_MAX_WAIT_MS}
spring.ccard.datasource.maximum-pool-size=${DBCP_GENERIC_POOL_MAX_SIZE_L1}
spring.ccard.datasource.minimum-idle=${DBCP_GENERIC_POOL_MIN_SIZE}
spring.ccard.datasource.auto-commit=${DBCP_GENERIC_CONN_AUTO_COMMIT}
spring.ccard.datasource.max-lifetime=${DBCP_GENERIC_CONN_MAX_AGE_MS}
spring.ccard.datasource.connection-test-query=${DBCP_GENERIC_CONN_VALIDATION_ORACLE}
spring.ccard.datasource.pool-name=${SPRING_CCARD_DATASOURCE_HIKARI_POOL-NAME}


########## Config Resilience4j ##########
resilience4j.bulkhead.configs.default.maxConcurrentCalls=${RESILIENCE4J_BULKHEAD_CONFIGS_DEFAULT_MAXCONCURRENTCALLS}
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_REGISTERHEALTHINDICATOR}
resilience4j.circuitbreaker.configs.default.slidingWindowSize=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_SLIDINGWINDOWSIZE}
resilience4j.circuitbreaker.configs.default.slowCallDurationThreshold=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_SLOWCALLDURATIONTHRESHOLD}
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_PERMITTEDNUMBEROFCALLSINHALFOPENSTATE}
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_AUTOMATICTRANSITIONFROMOPENTOHALFOPENENABLED}
resilience4j.circuitbreaker.configs.default.slidingWindowType=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_SLIDINGWINDOWTYPE}
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_MINIMUMNUMBEROFCALLS}
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_WAITDURATIONINOPENSTATE}
resilience4j.circuitbreaker.configs.default.failureRateThreshold=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_FAILURERATETHRESHOLD}
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_EVENTCONSUMERBUFFERSIZE}
resilience4j.circuitbreaker.configs.default.recordExceptions[0]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS0}
resilience4j.circuitbreaker.configs.default.recordExceptions[1]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS1}
resilience4j.circuitbreaker.configs.default.recordExceptions[2]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS2}
resilience4j.circuitbreaker.configs.default.recordExceptions[3]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS3}
resilience4j.circuitbreaker.configs.default.recordExceptions[4]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS4}
resilience4j.circuitbreaker.configs.default.recordExceptions[5]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_RECORDEXCEPTIONS5}
resilience4j.circuitbreaker.configs.default.ignoreExceptions[0]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_IGNOREEXCEPTIONS0}
resilience4j.circuitbreaker.configs.default.ignoreExceptions[1]=${RESILIENCE4J_CIRCUITBREAKER_CONFIGS_DEFAULT_IGNOREEXCEPTIONS1}
resilience4j.ratelimiter.configs.default.registerHealthIndicator=${RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_REGISTERHEALTHINDICATOR}
resilience4j.ratelimiter.configs.default.limitForPeriod=${RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMITFORPERIOD}
resilience4j.ratelimiter.configs.default.limitRefreshPeriod=${RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_LIMITREFRESHPERIOD}
resilience4j.ratelimiter.configs.default.timeoutDuration=${RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_TIMEOUTDURATION}
resilience4j.ratelimiter.configs.default.eventConsumerBufferSize=${RESILIENCE4J_RATELIMITER_CONFIGS_DEFAULT_EVENTCONSUMERBUFFERSIZE}
resilience4j.retry.configs.default.maxAttempts=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_MAXATTEMPTS}
resilience4j.retry.configs.default.waitDuration=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_WAITDURATION}
resilience4j.retry.configs.default.enableExponentialBackoff=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_ENABLEEXPONENTIALBACKOFF}
resilience4j.retry.configs.default.exponentialBackoffMultiplier=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_EXPONENTIALBACKOFFMULTIPLIER}
resilience4j.retry.configs.default.retryExceptions[0]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_RETRYEXCEPTIONS0}
resilience4j.retry.configs.default.retryExceptions[1]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_RETRYEXCEPTIONS1}
resilience4j.retry.configs.default.retryExceptions[2]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_RETRYEXCEPTIONS2}
resilience4j.retry.configs.default.retryExceptions[3]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_RETRYEXCEPTIONS3}
resilience4j.retry.configs.default.ignoreExceptions[0]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_IGNOREEXCEPTIONS0}
resilience4j.retry.configs.default.ignoreExceptions[1]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_IGNOREEXCEPTIONS1}
resilience4j.retry.configs.default.ignoreExceptions[2]=${RESILIENCE4J_RETRY_CONFIGS_DEFAULT_IGNOREEXCEPTIONS2}
# Instance
resilience4j.bulkhead.instances.token.baseConfig=${RESILIENCE4J_BULKHEAD_INSTANCES_TOKEN_BASECONFIG}
resilience4j.circuitbreaker.instances.token.baseConfig=${RESILIENCE4J_CIRCUITBREAKER_INSTANCES_TOKEN_BASECONFIG}
resilience4j.ratelimiter.instances.token.baseConfig=${RESILIENCE4J_RATELIMITER_INSTANCES_TOKEN_BASECONFIG}
resilience4j.retry.instances.token.baseConfig=${RESILIENCE4J_RETRY_INSTANCES_TOKEN_BASECONFIG}


########## Cluster REDIS ##########
spring.session.store-type=${SPRING_SESSION_STORE-TYPE}
spring.redis.cluster.nodes[0] =${SPRING_REDIS_CLUSTER_NODES01}
spring.redis.cluster.nodes[1] =${SPRING_REDIS_CLUSTER_NODES02}
spring.redis.cluster.nodes[2] =${SPRING_REDIS_CLUSTER_NODES03}
spring.redis.cluster.maxTotal=${SPRING_REDIS_CLUSTER_MAXTOTAL}
spring.redis.cluster.maxIdle=${SPRING_REDIS_CLUSTER_MAXIDLE}
spring.redis.cluster.minIdle=${SPRING_REDIS_CLUSTER_MINIDLE}
spring.redis.cluster.maxWaitMillis=${SPRING_REDIS_CLUSTER_MAXWAITMILLIS}
#Credenciales de autentificacion
spring.redis.cluster.username =${REDIS_USERNAME}
spring.redis.cluster.password =${REDIS_PASSWORD}


########## Variables de Codigo ##########
secret=${SECRET}
ms=${MS}
s=${S}
min=${MIN}


########## Config clear cache ##########
CacheConfig.cron=${CACHECONFIG_CRON}


########## Log Console Level ##########
logging.level.com.claro.amx.sp.tokenauthenticationservice.commons.aop.LogAspect=${LOGGING_LEVEL_COM_CLARO_AMX_SP_TOKENAUTHENTICATIONSERVICE_COMMONS_AOP_LOGASPECT}
